-- ========== Create the tables ============ --

CREATE TABLE pizzas (
  pizza_id VARCHAR(50) PRIMARY KEY,     --This is the unique identifier for each pizza
  pizza_type_id VARCHAR(50) NOT NULL,   --This links to pizza_types table 
  size VARCHAR(10) NOT NULL,            --This shows the various sizes (S, M, L)
  price DECIMAL(10, 2) NOT NULL         --This depicts the prices of the pizzas in USD
);

CREATE TABLE pizza_types (
  pizza_type_id VARCHAR(50) PRIMARY KEY,   --This is the unique identifier for each pizza
  name VARCHAR(255) NOT NULL,              --This includes the full name of each pizza type
  category VARCHAR(50) NOT NULL            --This lists the category of the pizzas
);

CREATE TABLE orders (
  order_id SERIAL PRIMARY KEY.          --This is the unique identifier for each order
  date DATE NOT NULL,                   --This shows the date placed for an order
  time TIME NOT NULL,                   --This shows the time placed for an order
);

CREATE TABLE order_details (
  order_details_id SERIAL PRIMARY KEY,     --This is the unique identifier for each order detail
  order_id INTEGER NOT NULL,               --This links to the orders table
  pizza_id VARCHAR(50) NOT NULL,           --This links to the pizzas table
  quantity INTEGER NOT NULL                --This shows the number of pizzas ordered
);

-- ========== Upload the CSV files ============ --
COPY pizzas 
FROM 'D:/FBendele/CSV datasets/Pizza/pizzas.csv'
DELIMITER ','
CSV HEADER;
SELECT * FROM pizzas;

COPY pizza_types
FROM 'D:/FBendele/CSV datasets/Pizza/pizza_types.csv'
DELIMITER ','
CSV HEADER;
SELECT * FROM pizza_types;

COPY orders 
FROM 'D:/FBendele/CSV datasets/Pizza/orders.csv'
DELIMITER ','
CSV HEADER;
SELECT * FROM orders;

COPY pizzas 
FROM 'D:/FBendele/CSV datasets/Pizza/pizzas.csv'
DELIMITER ','
CSV HEADER;
SELECT * FROM pizzas;

-- ======= BASIC ANALYSIS ======= --

-- 5 questions to get a basic understanding of the data
-- 1: Find the total number of orders that were placed
-- 2: Calculate the total amount of revenue from pizza sales
-- 3: Determine the highest-priced pizza
-- 4: Retrieve the most common pizza size that was ordered
-- 5: List the top five most ordered pizza types alongside to their quantities

---- 1: Count the total number of rows in the orders table to find the total number of orders placed ----
SELECT COUNT(*) AS total_orders
FROM orders;

---- 2: Calculate the total amount of revenue by summing up the product of quantity with price for all ordered pizzas----
SELECT
  SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN pizzas p 
ON od.piza_id = p.pizza_id;

---- 3: Find the pizza with the highest price from the pizzas table -----
SELECT 
  pizza_id, size, price
FROM pizzas
ORDER_BY price DESC
LIMIT 10;

---- 4: Determine the most frequently ordered pizza size ----
SELECT 
  p.size,
  COUNT(DISTINCT od.order_id) AS size_count,
    SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizzas p
ON od.pizza_id = p.pizza_id
GROUP BY p.size
ORDER BY size_count DESC;

---- 5: Find the top five pizzas types through total quantity ordered -----
SELECT 
  pt.name AS pizza_type,
  SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizzas p
ON od.pizza_id = p.pizza_id
JOIN pizza_types pt
ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY total_quantity DESC
LIMIT 5;

------------------------ DEEP DIVE INTO ANALYSIS --------------------------
-5  questions for further and more concentrated analysis:
- 1: Retrieve the total quantity of each pizza category that was ordered for customer preference
- 2: Find the distribution of orders by each hour of the day for inventory management
- 3: Acquire the category distribution of pizzas for customer behavior
- 4: Group the orders by data and calculate the average number of pizzas that were ordered each day
- 5: Calculate the top three most ordered pizza types from revenue

---- 1: Find the total quantity ordered for each pizza category ----
SELECT 
  pt.cateogry,
  SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizzas p
ON od.pizza_id = p.pizza_id
JOIN pizza_types pt
ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.category
ORDER BY total_quantity DESC;

---- 2:Find the distribution of orders by each hour of the day ----
SELECT   
  EXTRACT(HOUR FROM o.time) AS hour_of_day)
  COUNT(o.order_id) AS total_orders
FROM orders o
GROUP BY hour_of_day
ORDER BY total_orders DESC;

---- 3: Find the category distribution of pizzas -----
SELECT
  pt.category,
  COUNT(DISTINCT p.pizza_id) AS total_pizzas
FROM pizzas p
JOIN pizza_types pt
ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.category
ORDER BY total_pizzas DESC;

---- 4: Determine the number of pizzas ordered each day -----
SELECT 
  o.date,
  ROUND(SUM(od.quantity), 2) AS total_orders
FROM orders o
JOIN order_details od
ON o.orer_id = od.order_id 
GROUP BY o.date
ORDER BY o.date;
-- Get the average number of pizzas ordered per day --
WITH CTE AS (
SELECT
  o.date,
  ROUND(SUM(od.quantity), 2) AS total_orders
FROM orders o
JOIN order_details od
ON o.order_id = od.order_id
GROUP BY o.date 
)
SELECT
         ROUND(AVG(total_orders), 2) AS avg_orders_per_day
FROM CTE;

---- 5: Calculate the top three most ordered pizza types based on revenue ----
SELECT 
  pt.name AS pizza_type,
  SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN pizzas p
ON od.pizza_id = p.pizza_id
JOIN pizza_types pt
ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY total_revenue DESC
LIMIT 3;



